<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alphaNum[0] = "a"
alphaNum[1] = "b"
alphaNum[2] = "c"
alphaNum[3] = "d"
alphaNum[4] = "e"
alphaNum[5] = "f"
alphaNum[6] = "g"
alphaNum[7] = "h"
alphaNum[8] = "i"
alphaNum[9] = "j"
alphaNum[10] = "k"
alphaNum[11] = "l"
alphaNum[12] = "m"
alphaNum[13] = "n"
alphaNum[14] = "o"
alphaNum[15] = "p"
alphaNum[16] = "q"
alphaNum[17] = "r"
alphaNum[18] = "s"
alphaNum[19] = "t"
alphaNum[20] = "u"
alphaNum[21] = "v"
alphaNum[22] = "w"
alphaNum[23] = "x"
alphaNum[24] = "y"
alphaNum[25] = "z"
alphaNum[26] = "1"
alphaNum[27] = "2"
alphaNum[28] = "3"
alphaNum[29] = "4"
alphaNum[30] = "5"
alphaNum[31] = "6"
alphaNum[32] = "7"
alphaNum[33] = "8"
alphaNum[34] = "9"
alphaNum[35] = "0"
alphaNum[36] = " "

morseCode[0] = ".-"
morseCode[1] = "-..."
morseCode[2] = "-.-."
morseCode[3] = "-.."
morseCode[4] = "."
morseCode[5] = "..-."
morseCode[6] = "--."
morseCode[7] = "...."
morseCode[8] = ".."
morseCode[9] = ".---"
morseCode[10] = "-.-"
morseCode[11] = ".-.."
morseCode[12] = "--"
morseCode[13] = "-."
morseCode[14] = "---"
morseCode[15] = ".--."
morseCode[16] = "--.-"
morseCode[17] = ".-."
morseCode[18] = "..."
morseCode[19] = "-"
morseCode[20] = "..-"
morseCode[21] = "...-"
morseCode[22] = ".--"
morseCode[23] = "-..-"
morseCode[24] = "-.--"
morseCode[25] = "--.."
morseCode[26] = ".----"
morseCode[27] = "..---"
morseCode[28] = "...--"
morseCode[29] = "....-"
morseCode[30] = "....."
morseCode[31] = "-...."
morseCode[32] = "--..."
morseCode[33] = "---.."
morseCode[34] = "----."
morseCode[35] = "-----"
morseCode[36] = "|"



input = "test";
destroyString = "";
morseCodeOut = convertToMorse(input)
gogo = 0;
baseTimeUnit = 100; // in ms
global.simulateCapslock = 0;
 audio_play_sound(sound0_SHORT,1,false)
 
 //sound_play(sound0_SHORT)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(consoleFont)

if(draw_sprite_clicked(niceBox,-1,0,0,"Click To Change Input") == 1)
{
    input = get_string("Enter input string to be convereted to morse code","")
    input = string_lower(input)
    morseCodeOut = convertToMorse(input)
}
draw_text(400,10,input)
draw_text(400,30,morseCodeOut)
draw_text(400,50,destroyString)

if(draw_sprite_clicked(niceBox,-1,0,40,"Click To Start Flashing") == 1)
{
    destroyString = morseCodeOut;
    gogo = 1;
    onChar = 0;
    waiting = 0;
}

if(draw_sprite_clicked(niceBox,-1,0,80,"rate: "+string(baseTimeUnit)+"(ms)") == 1)
{
    baseTimeUnit = get_integer("Enter the time in milliseconds for the base unit of time",100)
}

if(gogo == 1)
{
    if(waiting == 0)
    {
        if(onChar == string_length(morseCodeOut)){gogo = 0;} // invert off
        onChar+=1;
        symbol = string_char_at(morseCodeOut,onChar)
        destroyString = string_copy(destroyString,2,string_length(destroyString))
        waitForDuration = current_time;
        waiting = 1;
        if(symbol == "-" || symbol == ".")
        {
             press_capslock(); // invert TO ON
        }
        
    }
    if(waiting == 1)
    {
        if(symbol == ".")
        {
            if(current_time-waitForDuration &gt; baseTimeUnit)
            {
                audio_play_sound(sound0_SHORT,1,false)
                press_capslock(); // on
                waitForDuration = current_time;
                symbol = "w" 
            }
        }
        if(symbol == "-")
        {
            if(current_time-waitForDuration &gt; (baseTimeUnit*3))
            {
                audio_play_sound(sound1_long,1,false)
                press_capslock();  // off
                waitForDuration = current_time;
                symbol = "w" 
            }
        }   
        if(symbol == "|")
        {
            if(current_time-waitForDuration &gt; (baseTimeUnit*7))
            {
                //press_capslock();  // off
                waiting = 0;
            }
        }       
        if(symbol == " ")//between letters
        {
            if(current_time-waitForDuration &gt; (baseTimeUnit*3))
            {
                waiting = 0;
            }
        }
        if(symbol == "w") // off after each letter.
        {
            if(current_time-waitForDuration &gt; baseTimeUnit)
            {
                waiting = 0;
            }
        }        
        
    }
    
    
}


if(keyboard_check_pressed(vk_space))
{
    press_capslock();
}



if(global.simulateCapslock == 0)
{
    draw_set_color(c_black)
    draw_rectangle(room_width-300,room_height-300,room_width,room_height,0)
}
if(global.simulateCapslock == 1)
{
    draw_set_color(c_white)
    draw_rectangle(room_width-300,room_height-300,room_width,room_height,0)
}
draw_set_color(c_white)





if(draw_sprite_clicked(niceBox,-1,0,120,"Decode Images") == 1)
{
    room_goto(decodingRoom)
}







</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sound_play(sound0_SHORT)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
