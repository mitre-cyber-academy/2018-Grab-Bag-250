<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>listOfImages = ds_list_create();
gogo = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(gogo == 0)
{
    if(draw_sprite_clicked(niceBox,-1,0,0,"Encode Morse Code") == 1)
    {
        game_restart()
    }
    
    
    if(draw_sprite_clicked(niceBox,-1,0,40,"Decode Images") == 1)
    {
        gogo = 1;
        indexOn = 0;
        morseAtX = 86/2;
        morseAtY = 1030/2;
        morseColor = c_purple
        ds_list_clear(listOfImages)
        addFilesToList("",listOfImages);
        numOfFiles = ds_list_size(listOfImages);
        firstSprite = sprite_add(ds_list_find_value(listOfImages,indexOn),0,0,0,0,0);
        width = sprite_get_width(firstSprite);
        height = sprite_get_height(firstSprite)
        serf = surface_create(width,height)
        surface_set_target(serf)
        draw_sprite(firstSprite,0,0,0)
        surface_reset_target()
        sprite_delete(firstSprite)
        morseColor = getColorOnSurface(serf,morseAtX, morseAtY)
        gogo = 1;
        if(file_exists("data.txt"))
        {
            gogo = 100;
        }
       
    }
}

if(gogo == 1)
{
    if(keyboard_check(vk_left))
    {
        indexOn-=1
        indexOn = max(0,indexOn)
        putSpriteOnSurfaceAndDeleteSprite(ds_list_find_value(listOfImages,indexOn),serf)
        morseColor = getColorOnSurface(serf,morseAtX, morseAtY)
    }
    if(keyboard_check(vk_right))
    {
        indexOn+=1
        indexOn = min(indexOn,numOfFiles)
        putSpriteOnSurfaceAndDeleteSprite(ds_list_find_value(listOfImages,indexOn),serf)
        morseColor = getColorOnSurface(serf,morseAtX, morseAtY)
    }
    if(surface_exists(serf))
    {
        draw_surface_stretched(serf,0,0,width,height)
    }
    else
    {
        serf = surface_create(width,height)
    }
    draw_set_font(giantFont)
    draw_text(350,0,string(indexOn)+"/"+string(numOfFiles))
    draw_set_font(consoleFont)   
    draw_text(0,50,"X: "+string(morseAtX))
    draw_text(0,70,"Y: "+string(morseAtY))
    if(mouse_check_button(mb_right) &amp;&amp; gogo == 1)
    { 
        morseAtX = mouse_x
        morseAtY = mouse_y
        morseColor = getColorOnSurface(serf,morseAtX, morseAtY)
    }
    draw_point_color(morseAtX,morseAtY,c_red)
    draw_set_color(morseColor)
    draw_rectangle(room_width-100,0,room_width,100,0)
    draw_set_color(c_white)
    
    if(draw_sprite_clicked(niceBox,-1,0,0,"Process Images") == 1)
    {
        indexOn = 0;
        morseValueList = ds_list_create()
        gogo = 3;
        stringOf1sand0s = "";
    }
    
}

if(gogo == 3)
{
    draw_set_font(giantFont)
    draw_text(0,0,string(indexOn)+"/"+string(numOfFiles))
    draw_text(0,50,"X: "+string(morseAtX))
    draw_text(0,100,"Y: "+string(morseAtY))
    draw_set_font(consoleFont)  
    
    if(indexOn &lt; numOfFiles)
    {
        putSpriteOnSurfaceAndDeleteSprite(ds_list_find_value(listOfImages,indexOn),serf)
        morseColor = getColorOnSurface(serf,morseAtX, morseAtY)
        result = detectBrightnessPulse(morseColor)
        stringOf1sand0s+=string(result)
        ds_list_add(morseValueList,result);
        if(result == 0){draw_set_color(c_black)}
        if(result == 1){draw_set_color(c_white)}
        draw_rectangle(room_width-200,room_height-200,room_width,room_height,0)
        draw_set_color(c_white)
        indexOn+=1;
    }
    else
    {
        gogo +=1;
        outputText = file_text_open_write("data.txt")
        file_text_write_string(outputText,stringOf1sand0s)
        file_text_writeln(outputText)
        file_text_close(outputText)
    }
}
if(gogo == 4)
{  
    morseGraph = surface_create(width,100)
    surface_set_target(morseGraph)
    for(i = 0; i &lt; ds_list_size(morseValueList); i+=1)
    {
        noomber = ds_list_find_value(morseValueList,i)
        if(noomber == 0){draw_set_color(c_black)}
        if(noomber == 1){draw_set_color(c_white)}
        draw_line(i,0,i+1,100)
    }   
    surface_reset_target();
    draw_set_color(c_white)
    stringOfMorse = infoToMorse(morseValueList)
    show_message(stringOfMorse)
    gogo = 5;
}
if(gogo == 5)
{
    draw_surface(morseGraph,0,100)
    draw_set_font(consoleFont)  
    draw_text(0,0,"Finished checking images")
}



if(gogo == 100)
{   
    morseValueList = ds_list_create()
    philly = file_text_open_read("data.txt")
    longString = file_text_read_string(philly)
    file_text_close(philly)
    for(i = 1; i &lt;= string_length(longString); i+=1 )
    {
        letter = real(string_char_at(longString,i))
        ds_list_add(morseValueList,letter)
    }
    gogo = 4
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
